zoo.train <- zoo.all[1:50, ]
zoo.test <- zoo.all[51:101, ]
references <- zoo.test$class_type
model.J48 <- J48(class_type ~ ., data = zoo.train, control = Weka_control(R = T, M = 1) )
#  model <- train(class_type ~ ., data = zoo.train, method = "adaboost")
prediction.J48 <- predict(model.J48, newdata = zoo.test)
# prediction <- predict(model, newdata = zoo.test)
confmat.J48 <- table(prediction.J48, references)
#  confmat <- table(prediction, references)
accuracy.J48 <- sum(diag(confmat.J48)) / sum(confmat.J48)
#  accuracy <- sum(diag(confmat)) / sum(confmat)
acc.plot.J48 <- c(acc.plot.J48, accuracy.J48)
#  acc.plot <- c(acc.plot, accuracy)
}
plot(acc.plot.J48)
summary(acc.plot.J48)
acc.plot.J48 <- c()
acc.plot <- c()
for(i in 1:100){
zoo.all <- read.csv("zoo.csv")
zoo.all$class_type <- as.factor(zoo.all$class_type)
zoo.all <- zoo.all[sample(nrow(zoo.all)),]
zoo.train <- zoo.all[1:50, ]
zoo.test <- zoo.all[51:101, ]
references <- zoo.test$class_type
model.J48 <- J48(class_type ~ ., data = zoo.train, control = Weka_control(R = T, M = 1, A = T) )
#  model <- train(class_type ~ ., data = zoo.train, method = "adaboost")
prediction.J48 <- predict(model.J48, newdata = zoo.test)
# prediction <- predict(model, newdata = zoo.test)
confmat.J48 <- table(prediction.J48, references)
#  confmat <- table(prediction, references)
accuracy.J48 <- sum(diag(confmat.J48)) / sum(confmat.J48)
#  accuracy <- sum(diag(confmat)) / sum(confmat)
acc.plot.J48 <- c(acc.plot.J48, accuracy.J48)
#  acc.plot <- c(acc.plot, accuracy)
}
plot(acc.plot.J48)
summary(acc.plot.J48)
acc.plot.J48 <- c()
acc.plot <- c()
for(i in 1:100){
zoo.all <- zoo.all[sample(nrow(zoo.all)),]
zoo.train <- zoo.all[1:50, ]
zoo.test <- zoo.all[51:101, ]
references <- zoo.test$class_type
model.J48 <- J48(class_type ~ ., data = zoo.train, control = Weka_control(R = T, M = 1, A = T) )
model <- train(class_type ~ ., data = zoo.train, method = "adaboost")
prediction.J48 <- predict(model.J48, newdata = zoo.test)
prediction <- predict(model, newdata = zoo.test)
confmat.J48 <- table(prediction.J48, references)
confmat <- table(prediction, references)
accuracy.J48 <- sum(diag(confmat.J48)) / sum(confmat.J48)
accuracy <- sum(diag(confmat)) / sum(confmat)
acc.plot.J48 <- c(acc.plot.J48, accuracy.J48)
acc.plot <- c(acc.plot, accuracy)
}
plot(acc.plot.J48)
summary(acc.plot.J48)
summary(acc.plot)
##### shufling datas #####
acc.plot.J48 <- c()
acc.plot <- c()
for(i in 1:100){
zoo.all <- read.csv("zoo.csv")
zoo.all$class_type <- as.factor(zoo.all$class_type)
zoo.all <- zoo.all[sample(nrow(zoo.all)),]
zoo.train <- zoo.all[1:50, ]
zoo.test <- zoo.all[51:101, ]
references <- zoo.test$class_type
model.J48 <- J48(class_type ~ ., data = zoo.train, control = Weka_control(R = T, M = 1, A = T) )
model <- train(class_type ~ ., data = zoo.train, method = "adaboost")
prediction.J48 <- predict(model.J48, newdata = zoo.test)
prediction <- predict(model, newdata = zoo.test)
confmat.J48 <- table(prediction.J48, references)
confmat <- table(prediction, references)
accuracy.J48 <- sum(diag(confmat.J48)) / sum(confmat.J48)
accuracy <- sum(diag(confmat)) / sum(confmat)
acc.plot.J48 <- c(acc.plot.J48, accuracy.J48)
acc.plot <- c(acc.plot, accuracy)
}
plot(acc.plot.J48)
summary(acc.plot.J48)
##### shufling datas #####
acc.plot.J48 <- c()
acc.plot <- c()
for(i in 1:100){
zoo.all <- read.csv("zoo.csv")
zoo.all$class_type <- as.factor(zoo.all$class_type)
zoo.all <- zoo.all[sample(nrow(zoo.all)),]
zoo.train <- zoo.all[1:50, ]
zoo.test <- zoo.all[51:101, ]
references <- zoo.test$class_type
model.J48 <- J48(class_type ~ ., data = zoo.train, control = Weka_control(R = T, M = 1, A = T) )
#  model <- train(class_type ~ ., data = zoo.train, method = "adaboost")
prediction.J48 <- predict(model.J48, newdata = zoo.test)
#  prediction <- predict(model, newdata = zoo.test)
confmat.J48 <- table(prediction.J48, references)
#  confmat <- table(prediction, references)
accuracy.J48 <- sum(diag(confmat.J48)) / sum(confmat.J48)
#  accuracy <- sum(diag(confmat)) / sum(confmat)
acc.plot.J48 <- c(acc.plot.J48, accuracy.J48)
#  acc.plot <- c(acc.plot, accuracy)
}
plot(acc.plot.J48)
summary(acc.plot.J48)
summary(acc.plot)
##### shufling datas #####
acc.plot.J48 <- c()
acc.plot <- c()
for(i in 1:100){
zoo.all <- read.csv("zoo.csv")
zoo.all$class_type <- as.factor(zoo.all$class_type)
zoo.all <- zoo.all[sample(nrow(zoo.all)),]
zoo.train <- zoo.all[1:50, ]
zoo.test <- zoo.all[51:101, ]
references <- zoo.test$class_type
model.J48 <- J48(class_type ~ ., data = zoo.train, control = Weka_control(R = T, M = 1, A = T) )
model <- train(class_type ~ ., data = zoo.train, method = "adaboost")
prediction.J48 <- predict(model.J48, newdata = zoo.test)
#  prediction <- predict(model, newdata = zoo.test)
confmat.J48 <- table(prediction.J48, references)
#  confmat <- table(prediction, references)
accuracy.J48 <- sum(diag(confmat.J48)) / sum(confmat.J48)
#  accuracy <- sum(diag(confmat)) / sum(confmat)
acc.plot.J48 <- c(acc.plot.J48, accuracy.J48)
#  acc.plot <- c(acc.plot, accuracy)
}
plot(acc.plot.J48)
summary(acc.plot.J48)
summary(acc.plot)
acc.plot.J48
acc.plot.J48 <- c()
acc.plot <- c()
for(i in 1:100){
zoo.all <- read.csv("zoo.csv")
zoo.all$class_type <- as.factor(zoo.all$class_type)
zoo.all <- zoo.all[sample(nrow(zoo.all)),]
zoo.train <- zoo.all[1:50, ]
zoo.test <- zoo.all[51:101, ]
references <- zoo.test$class_type
model.J48 <- J48(class_type ~ ., data = zoo.train, control = Weka_control(R = T, M = 1, A = T) )
model <- train(class_type ~ ., data = zoo.train, method = "treebag")
prediction.J48 <- predict(model.J48, newdata = zoo.test)
#  prediction <- predict(model, newdata = zoo.test)
confmat.J48 <- table(prediction.J48, references)
#  confmat <- table(prediction, references)
accuracy.J48 <- sum(diag(confmat.J48)) / sum(confmat.J48)
#  accuracy <- sum(diag(confmat)) / sum(confmat)
acc.plot.J48 <- c(acc.plot.J48, accuracy.J48)
#  acc.plot <- c(acc.plot, accuracy)
}
plot(acc.plot.J48)
summary(acc.plot.J48)
summary(acc.plot)
model
acc.plot.J48 <- c()
for(i in 1:100){
zoo.all <- read.csv("zoo.csv")
zoo.all$class_type <- as.factor(zoo.all$class_type)
zoo.all <- zoo.all[sample(nrow(zoo.all)),]
zoo.train <- zoo.all[1:50, ]
zoo.test <- zoo.all[51:101, ]
references <- zoo.test$class_type
model.J48 <- J48(class_type ~ ., data = zoo.train, control = Weka_control(R = T, M = 1, A = T) )
prediction.J48 <- predict(model.J48, newdata = zoo.test)
confmat.J48 <- table(prediction.J48, references)
accuracy.J48 <- sum(diag(confmat.J48)) / sum(confmat.J48)
acc.plot.J48 <- c(acc.plot.J48, accuracy.J48)
}
plot(acc.plot.J48)
summary(acc.plot.J48)
acc.plot.J48 <- c()
for(i in 1:100){
zoo.all <- read.csv("zoo.csv")
zoo.all$class_type <- as.factor(zoo.all$class_type)
zoo.all <- zoo.all[sample(nrow(zoo.all)),]
zoo.train <- zoo.all[1:50, ]
zoo.test <- zoo.all[51:101, ]
references <- zoo.test$class_type
model.J48 <- J48(class_type ~ ., data = zoo.train, control = Weka_control(R = T, M = 2, A = T) )
prediction.J48 <- predict(model.J48, newdata = zoo.test)
confmat.J48 <- table(prediction.J48, references)
accuracy.J48 <- sum(diag(confmat.J48)) / sum(confmat.J48)
acc.plot.J48 <- c(acc.plot.J48, accuracy.J48)
}
plot(acc.plot.J48)
summary(acc.plot.J48)
acc.plot.J48 <- c()
for(i in 1:100){
zoo.all <- read.csv("zoo.csv")
zoo.all$class_type <- as.factor(zoo.all$class_type)
zoo.all <- zoo.all[sample(nrow(zoo.all)),]
zoo.train <- zoo.all[1:50, ]
zoo.test <- zoo.all[51:101, ]
references <- zoo.test$class_type
model.J48 <- J48(class_type ~ ., data = zoo.train, control = Weka_control(R = T, M = 2, A = T) )
prediction.J48 <- predict(model.J48, newdata = zoo.test)
confmat.J48 <- table(prediction.J48, references)
accuracy.J48 <- sum(diag(confmat.J48)) / sum(confmat.J48)
acc.plot.J48 <- c(acc.plot.J48, accuracy.J48)
}
plot(acc.plot.J48)
summary(acc.plot.J48)
sd(acc.plot.J48)
acc.plot.J48 <- c()
for(i in 1:100){
zoo.all <- read.csv("zoo.csv")
zoo.all$class_type <- as.factor(zoo.all$class_type)
zoo.all <- zoo.all[sample(nrow(zoo.all)),]
zoo.train <- zoo.all[1:50, ]
zoo.test <- zoo.all[51:101, ]
references <- zoo.test$class_type
model.J48 <- J48(class_type ~ ., data = zoo.train, control = Weka_control(R = T, M = 1, A = T) )
prediction.J48 <- predict(model.J48, newdata = zoo.test)
confmat.J48 <- table(prediction.J48, references)
accuracy.J48 <- sum(diag(confmat.J48)) / sum(confmat.J48)
acc.plot.J48 <- c(acc.plot.J48, accuracy.J48)
}
plot(acc.plot.J48)
summary(acc.plot.J48)
sd(acc.plot.J48)
0,1
0.1
acc.plot.J48 <- c()
for(i in 1:100){
zoo.all <- read.csv("zoo.csv")
zoo.all$class_type <- as.factor(zoo.all$class_type)
zoo.all <- zoo.all[sample(nrow(zoo.all)),]
zoo.train <- zoo.all[1:50, ]
zoo.test <- zoo.all[51:101, ]
references <- zoo.test$class_type
model.J48 <- J48(class_type ~ ., data = zoo.train, control = Weka_control(R = T, M = 1, A = T, C = 0.1) )
prediction.J48 <- predict(model.J48, newdata = zoo.test)
confmat.J48 <- table(prediction.J48, references)
accuracy.J48 <- sum(diag(confmat.J48)) / sum(confmat.J48)
acc.plot.J48 <- c(acc.plot.J48, accuracy.J48)
}
plot(acc.plot.J48)
summary(acc.plot.J48)
sd(acc.plot.J48)
###### model evaluation #####
references <- zoo.test$class_type
confmat.J48 <- table(prediction.J48, references)
confmat.J48
confmat <- table(prediction, references)
confmat
accuracy.J48 <- sum(diag(confmat.J48)) / sum(confmat.J48)
accuracy.J48
accuracy <- sum(diag(confmat)) / sum(confmat)
accuracy
##### shufling datas #####
acc.plot.J48 <- c()
for(i in 1:100){
zoo.all <- read.csv("zoo.csv")
zoo.all$class_type <- as.factor(zoo.all$class_type)
zoo.all <- zoo.all[sample(nrow(zoo.all)),]
zoo.train <- zoo.all[1:50, ]
zoo.test <- zoo.all[51:101, ]
references <- zoo.test$class_type
model.J48 <- J48(class_type ~ ., data = zoo.train, control = Weka_control(R = T, M = 1, A = T))
prediction.J48 <- predict(model.J48, newdata = zoo.test)
confmat.J48 <- table(prediction.J48, references)
accuracy.J48 <- sum(diag(confmat.J48)) / sum(confmat.J48)
acc.plot.J48 <- c(acc.plot.J48, accuracy.J48)
}
plot(acc.plot.J48)
summary(acc.plot.J48)
sd(acc.plot.J48)
##### loading data #######
library(RWeka)
library(plyr)
library(dplyr)
library(caret)
library(e1071)
library(ipred)
zoo.all <- read.csv("zoo.csv")
head(zoo.all)
summary(zoo.all)
####### preprocessing #######
zoo.all$class_type <- as.factor(zoo.all$class_type)
zoo.all <- zoo.all[sample(nrow(zoo.all)),]
zoo.train <- zoo.all[1:50, ]
zoo.test <- zoo.all[51:101, ]
head(zoo.train)
head(zoo.test)
###### model train ######
model.J48 <- J48(class_type ~ ., data = zoo.train, control = Weka_control(R = T) )
model <- train(class_type ~ ., data = zoo.train, method = "adaboost")
###### model test ######
prediction.J48 <- predict(model.J48, newdata = zoo.test)
prediction <- predict(model, newdata = zoo.test)
###### model evaluation #####
references <- zoo.test$class_type
confmat.J48 <- table(prediction.J48, references)
confmat.J48
confmat <- table(prediction, references)
confmat
accuracy.J48 <- sum(diag(confmat.J48)) / sum(confmat.J48)
accuracy.J48
accuracy <- sum(diag(confmat)) / sum(confmat)
accuracy
##### shufling data #####
acc.plot.J48 <- c()
for(i in 1:100){
zoo.all <- read.csv("zoo.csv")
zoo.all$class_type <- as.factor(zoo.all$class_type)
zoo.all <- zoo.all[sample(nrow(zoo.all)),]
zoo.train <- zoo.all[1:50, ]
zoo.test <- zoo.all[51:101, ]
references <- zoo.test$class_type
model.J48 <- J48(class_type ~ ., data = zoo.train, control = Weka_control(R = F, M = 1, A = T))
prediction.J48 <- predict(model.J48, newdata = zoo.test)
confmat.J48 <- table(prediction.J48, references)
accuracy.J48 <- sum(diag(confmat.J48)) / sum(confmat.J48)
acc.plot.J48 <- c(acc.plot.J48, accuracy.J48)
}
plot(acc.plot.J48)
summary(acc.plot.J48)
sd(acc.plot.J48)
plot(model.J48)
acc.plot.J48 <- c()
for(i in 1:100){
zoo.all <- read.csv("zoo.csv")
zoo.all$class_type <- as.factor(zoo.all$class_type)
zoo.all <- zoo.all[sample(nrow(zoo.all)),]
zoo.train <- zoo.all[1:50, ]
zoo.test <- zoo.all[51:101, ]
references <- zoo.test$class_type
model.J48 <- J48(class_type ~ ., data = zoo.train, control = Weka_control(R = T, M = 1, A = T))
prediction.J48 <- predict(model.J48, newdata = zoo.test)
confmat.J48 <- table(prediction.J48, references)
accuracy.J48 <- sum(diag(confmat.J48)) / sum(confmat.J48)
acc.plot.J48 <- c(acc.plot.J48, accuracy.J48)
}
plot(acc.plot.J48)
summary(acc.plot.J48)
sd(acc.plot.J48)
plot(model.J48)
acc.plot.J48 <- c()
for(i in 1:100){
zoo.all <- read.csv("zoo.csv")
zoo.all$class_type <- as.factor(zoo.all$class_type)
zoo.all <- zoo.all[sample(nrow(zoo.all)),]
zoo.train <- zoo.all[1:50, ]
zoo.test <- zoo.all[51:101, ]
references <- zoo.test$class_type
model.J48 <- J48(class_type ~ ., data = zoo.train, control = Weka_control(R = F, M = 1, A = T))
prediction.J48 <- predict(model.J48, newdata = zoo.test)
confmat.J48 <- table(prediction.J48, references)
accuracy.J48 <- sum(diag(confmat.J48)) / sum(confmat.J48)
acc.plot.J48 <- c(acc.plot.J48, accuracy.J48)
}
plot(acc.plot.J48)
summary(acc.plot.J48)
sd(acc.plot.J48)
acc.plot.J48 <- c()
for(i in 1:100){
zoo.all <- read.csv("zoo.csv")
zoo.all$class_type <- as.factor(zoo.all$class_type)
zoo.all <- zoo.all[sample(nrow(zoo.all)),]
zoo.train <- zoo.all[1:50, ]
zoo.test <- zoo.all[51:101, ]
references <- zoo.test$class_type
model.J48 <- J48(class_type ~ ., data = zoo.train, control = Weka_control(R = F, M = 1, A = F))
prediction.J48 <- predict(model.J48, newdata = zoo.test)
confmat.J48 <- table(prediction.J48, references)
accuracy.J48 <- sum(diag(confmat.J48)) / sum(confmat.J48)
acc.plot.J48 <- c(acc.plot.J48, accuracy.J48)
}
summary(acc.plot.J48)
sd(acc.plot.J48)
acc.plot.J48 <- c()
for(i in 1:100){
zoo.all <- read.csv("zoo.csv")
zoo.all$class_type <- as.factor(zoo.all$class_type)
zoo.all <- zoo.all[sample(nrow(zoo.all)),]
zoo.train <- zoo.all[1:50, ]
zoo.test <- zoo.all[51:101, ]
references <- zoo.test$class_type
model.J48 <- J48(class_type ~ ., data = zoo.train, control = Weka_control(R = F, M = 1, A = T))
prediction.J48 <- predict(model.J48, newdata = zoo.test)
confmat.J48 <- table(prediction.J48, references)
accuracy.J48 <- sum(diag(confmat.J48)) / sum(confmat.J48)
acc.plot.J48 <- c(acc.plot.J48, accuracy.J48)
}
summary(acc.plot.J48)
sd(acc.plot.J48)
acc.plot.J48 <- c()
for(i in 1:100){
zoo.all <- read.csv("zoo.csv")
zoo.all$class_type <- as.factor(zoo.all$class_type)
zoo.all <- zoo.all[sample(nrow(zoo.all)),]
zoo.train <- zoo.all[1:50, ]
zoo.test <- zoo.all[51:101, ]
references <- zoo.test$class_type
model.J48 <- J48(class_type ~ ., data = zoo.train, control = Weka_control(R = T, M = 1, A = T))
prediction.J48 <- predict(model.J48, newdata = zoo.test)
confmat.J48 <- table(prediction.J48, references)
accuracy.J48 <- sum(diag(confmat.J48)) / sum(confmat.J48)
acc.plot.J48 <- c(acc.plot.J48, accuracy.J48)
}
summary(acc.plot.J48)
sd(acc.plot.J48)
acc.plot.J48 <- c()
for(i in 1:100){
zoo.all <- read.csv("zoo.csv")
zoo.all$class_type <- as.factor(zoo.all$class_type)
zoo.all <- zoo.all[sample(nrow(zoo.all)),]
zoo.train <- zoo.all[1:50, ]
zoo.test <- zoo.all[51:101, ]
references <- zoo.test$class_type
model.J48 <- J48(class_type ~ ., data = zoo.train, control = Weka_control(R = F, M = 1, A = T))
prediction.J48 <- predict(model.J48, newdata = zoo.test)
confmat.J48 <- table(prediction.J48, references)
accuracy.J48 <- sum(diag(confmat.J48)) / sum(confmat.J48)
acc.plot.J48 <- c(acc.plot.J48, accuracy.J48)
}
summary(acc.plot.J48)
sd(acc.plot.J48)
head(zoo.all)
###### loading data #######
wine.all <- read.csv("winequalityN")
###### analysis ######
head(wine.all)
summary(wine.all)
getwd
getwd()
###### loading data #######
wine.all <- read.csv("winequalityN.csv")
###### analysis ######
head(wine.all)
summary(wine.all)
###### loading data #######
wine.all <- read.csv("winequalityN.csv")
###### analysis ######
head(wine.all)
summary(wine.all)
##### preprocessing #####
wine.all <- wine.all[select(nrow(wine.all)), ]
wine.all$quality <- as.factor(wine.all$quality)
wine.all[is.na(wine.all$fixed.acidity), "fixed.acidity"] <- mean(wine.all$fixed.acidity, na.rm = T)
wine.all[is.na(wine.all$volatile.acidity), "volatile.acidity"] <- mean(wine.all$volatile.acidity, na.rm = T)
wine.all[is.na(wine.all$citric.acid), "citric.acid"] <- mean(wine.all$citric.acid, na.rm = T)
wine.all[is.na(wine.all$residual.sugar), "residual.sugar"] <- mean(wine.all$residual.sugar, na.rm = T)
wine.all[is.na(wine.all$chlorides), "chlorides"] <- mean(wine.all$chlorides, na.rm = T)
wine.all[is.na(wine.all$pH), "pH"] <- mean(wine.all$pH, na.rm = T)
wine.all[is.na(wine.all$sulphates), "sulphates"] <- mean(wine.all$sulphates, na.rm = T)
summary(wine.all)
plot(wine.all)
plot(wine.all$type)
plot(wine.all$quality, col = wine.all$type)
plot(wine.all$quality)
tail(wine.all)
###### loading data #######
wine.all <- read.csv("winequalityN.csv")
###### analysis ######
head(wine.all)
summary(wine.all)
##### preprocessing #####
wine.all <- wine.all[select(nrow(wine.all)), ]
wine.all$quality <- as.factor(wine.all$quality)
wine.all[is.na(wine.all$fixed.acidity), "fixed.acidity"] <- mean(wine.all$fixed.acidity, na.rm = T)
wine.all[is.na(wine.all$volatile.acidity), "volatile.acidity"] <- mean(wine.all$volatile.acidity, na.rm = T)
wine.all[is.na(wine.all$citric.acid), "citric.acid"] <- mean(wine.all$citric.acid, na.rm = T)
wine.all[is.na(wine.all$residual.sugar), "residual.sugar"] <- mean(wine.all$residual.sugar, na.rm = T)
wine.all[is.na(wine.all$chlorides), "chlorides"] <- mean(wine.all$chlorides, na.rm = T)
wine.all[is.na(wine.all$pH), "pH"] <- mean(wine.all$pH, na.rm = T)
wine.all[is.na(wine.all$sulphates), "sulphates"] <- mean(wine.all$sulphates, na.rm = T)
summary(wine.all)
plot(wine.all$type)
plot(wine.all$quality)
wine.train <- wine.all[1:3250, ]
wine.test <- wine.all[3251:6497, ]
###### model ######
model <- train(type ~ ., data = wine.train, method = "J48")
prediction <- predict(model, wine.test)
confmat <- table(prediction, wine.test$quality)
confmat
accuracy <- sum(diag(confmat)) / sum(confmat)
confmat
###### loading data #######
wine.all <- read.csv("winequalityN.csv")
###### analysis ######
head(wine.all)
summary(wine.all)
##### preprocessing #####
wine.all <- wine.all[select(nrow(wine.all)), ]
wine.all$quality <- as.factor(wine.all$quality)
wine.all[is.na(wine.all$fixed.acidity), "fixed.acidity"] <- mean(wine.all$fixed.acidity, na.rm = T)
wine.all[is.na(wine.all$volatile.acidity), "volatile.acidity"] <- mean(wine.all$volatile.acidity, na.rm = T)
wine.all[is.na(wine.all$citric.acid), "citric.acid"] <- mean(wine.all$citric.acid, na.rm = T)
wine.all[is.na(wine.all$residual.sugar), "residual.sugar"] <- mean(wine.all$residual.sugar, na.rm = T)
wine.all[is.na(wine.all$chlorides), "chlorides"] <- mean(wine.all$chlorides, na.rm = T)
wine.all[is.na(wine.all$pH), "pH"] <- mean(wine.all$pH, na.rm = T)
wine.all[is.na(wine.all$sulphates), "sulphates"] <- mean(wine.all$sulphates, na.rm = T)
summary(wine.all)
plot(wine.all$type)
plot(wine.all$quality)
wine.train <- wine.all[1:3250, ]
wine.test <- wine.all[3251:6497, ]
###### model ######
model <- train(type ~ ., data = wine.train, method = "J48")
prediction <- predict(model, wine.test)
confmat <- table(prediction, wine.test$quality)
confmat
accuracy <- sum(diag(confmat)) / sum(confmat)
accuracy
class(wine.all$type)
wine.test$quality
length(wine.test$quality)
length(prediction)
prediction
